name: "exampleReport"
on: [push]

jobs:
  # make sure the action works on a clean machines without building

  ## Basic
  test_basic_success:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        token: ${{ secrets.TOKEN_ACTIONS }}
        name: Test Basic Success
        conclusion: success
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          
  test_aws_response:
     runs-on: ubuntu-latest
     strategy:
      matrix:
        include:
          - TEST_NAME: "Latest v2"
            AWS_CLI_VERSION: "2"
          - TEST_NAME: "Specific v2"
            AWS_CLI_VERSION: "2.0.30"
          - TEST_NAME: "Latest v1"
            AWS_CLI_VERSION: "1"
          - TEST_NAME: "Specific v1"
            AWS_CLI_VERSION: "1.18.1"
          - TEST_NAME: "No Input"
     name: Test ${{ matrix.TEST_NAME }} ${{ matrix.AWS_CLI_VERSION }}
     steps:
      - name: Test ${{ matrix.TEST_NAME }}
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@master
        with:
          version: ${{ matrix.AWS_CLI_VERSION }}
      - run: aws --version
        shell: bash
      - name: Publish Report
        run: |
           aws_resp=$(aws devicefarm get-run --arn arn:aws:devicefarm:us-west-2:613203822881:run:9bf35c1e-ee79-42f2-b7d3-74a976d95dcb/98616d95-b866-4860-ad9d-77e22c4dc8b3 | jq '.run.result')
           echo ${aws_resp}
           echo aws devicefarm get-run --arn arn:aws:devicefarm:us-west-2:613203822881:run:9bf35c1e-ee79-42f2-b7d3-74a976d95dcb/98616d95-b866-4860-ad9d-77e22c4dc8b3

